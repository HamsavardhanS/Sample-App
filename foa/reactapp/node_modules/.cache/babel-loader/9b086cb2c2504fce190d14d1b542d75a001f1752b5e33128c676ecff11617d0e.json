{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hamsha Vardhan\\\\Downloads\\\\Food Ordering App\\\\foa\\\\reactapp\\\\src\\\\components\\\\AppAdmin\\\\ManageRestaurants.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getAllRestaurants, deleteRestaurant, updateRestaurant } from \"../../services/adminapi\";\nimport { Card, CardContent, Button, TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageRestaurants = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [editMode, setEditMode] = useState(null);\n  const [editData, setEditData] = useState({\n    name: \"\",\n    location: \"\"\n  });\n  const fetchRestaurants = () => {\n    getAllRestaurants().then(res => setRestaurants(res.data)).catch(err => console.error(\"Error fetching restaurants:\", err));\n  };\n  useEffect(() => {\n    fetchRestaurants();\n  }, []);\n  const handleDelete = id => {\n    deleteRestaurant(id).then(fetchRestaurants);\n  };\n  const handleUpdate = id => {\n    updateRestaurant(id, editData).then(() => {\n      setEditMode(null);\n      fetchRestaurants();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Manage Restaurants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), restaurants.map(r => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-3 shadow-md\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: editMode === r.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Name\",\n            value: editData.name,\n            onChange: e => setEditData({\n              ...editData,\n              name: e.target.value\n            }),\n            className: \"mb-2\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Location\",\n            value: editData.address,\n            onChange: e => setEditData({\n              ...editData,\n              location: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleUpdate(r.id),\n            variant: \"contained\",\n            color: \"success\",\n            className: \"mt-2\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditMode(null),\n            variant: \"outlined\",\n            color: \"error\",\n            className: \"mt-2 ml-2\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: r.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 20\n            }, this), \" - \", r.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setEditMode(r.id);\n              setEditData(r);\n            },\n            variant: \"outlined\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleDelete(r.id),\n            variant: \"contained\",\n            color: \"error\",\n            className: \"ml-2\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, r.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageRestaurants, \"YJXpw1lS69hGodlxIWM++AwLxvI=\");\n_c = ManageRestaurants;\nexport default ManageRestaurants;\nvar _c;\n$RefreshReg$(_c, \"ManageRestaurants\");","map":{"version":3,"names":["React","useEffect","useState","getAllRestaurants","deleteRestaurant","updateRestaurant","Card","CardContent","Button","TextField","jsxDEV","_jsxDEV","ManageRestaurants","_s","restaurants","setRestaurants","editMode","setEditMode","editData","setEditData","name","location","fetchRestaurants","then","res","data","catch","err","console","error","handleDelete","id","handleUpdate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","r","label","value","onChange","e","target","fullWidth","address","onClick","variant","color","_c","$RefreshReg$"],"sources":["C:/Users/Hamsha Vardhan/Downloads/Food Ordering App/foa/reactapp/src/components/AppAdmin/ManageRestaurants.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getAllRestaurants, deleteRestaurant, updateRestaurant } from \"../../services/adminapi\";\nimport { Card, CardContent, Button, TextField } from \"@mui/material\";\n\nconst ManageRestaurants = () => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [editMode, setEditMode] = useState(null);\n  const [editData, setEditData] = useState({ name: \"\", location: \"\" });\n\n  const fetchRestaurants = () => {\n    getAllRestaurants()\n      .then((res) => setRestaurants(res.data))\n      .catch((err) => console.error(\"Error fetching restaurants:\", err));\n  };\n\n  useEffect(() => {\n    fetchRestaurants();\n  }, []);\n\n  const handleDelete = (id) => {\n    deleteRestaurant(id).then(fetchRestaurants);\n  };\n\n  const handleUpdate = (id) => {\n    updateRestaurant(id, editData).then(() => {\n      setEditMode(null);\n      fetchRestaurants();\n    });\n  };\n\n  return (\n    <div className=\"p-6\">\n      <h2 className=\"text-xl font-bold mb-4\">Manage Restaurants</h2>\n      {restaurants.map((r) => (\n        <Card key={r.id} className=\"mb-3 shadow-md\">\n          <CardContent>\n            {editMode === r.id ? (\n              <div>\n                <TextField\n                  label=\"Name\"\n                  value={editData.name}\n                  onChange={(e) => setEditData({ ...editData, name: e.target.value })}\n                  className=\"mb-2\"\n                  fullWidth\n                />\n                <TextField\n                  label=\"Location\"\n                  value={editData.address}\n                  onChange={(e) => setEditData({ ...editData, location: e.target.value })}\n                  fullWidth\n                />\n                <Button onClick={() => handleUpdate(r.id)} variant=\"contained\" color=\"success\" className=\"mt-2\">Save</Button>\n                <Button onClick={() => setEditMode(null)} variant=\"outlined\" color=\"error\" className=\"mt-2 ml-2\">Cancel</Button>\n              </div>\n            ) : (\n              <div>\n                <p><strong>{r.name}</strong> - {r.location}</p>\n                <Button onClick={() => { setEditMode(r.id); setEditData(r); }} variant=\"outlined\">Edit</Button>\n                <Button onClick={() => handleDelete(r.id)} variant=\"contained\" color=\"error\" className=\"ml-2\">Delete</Button>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nexport default ManageRestaurants;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}